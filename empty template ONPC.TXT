#pragma comment(linker, "/stack:256000000")
#pragma gcc optimize("O3")
#pragma gcc target("sse4")
#define _CRT_SECURE_NO_WARNINGS
#define _USE_MATH_DEFINES
#define mp make_pair
#define gl getline
#define pb push_back
#define eb emplace_back
#define ob pop_back
#define sz(x) ((int)(x.size()))
#define UM unordered_map
#define US unordered_set
#define X first
#define Y second
#define whole(x) x.begin(), x.end()
#include <iostream>
#include <vector>
#include <iomanip>
#include <algorithm>
#include <set>
#include <map>
#include <unordered_set>
#include <unordered_map>
#include <string>
#include <queue>
#include <cmath>
#include <climits>
#include <bitset>
#include <random>
#include <ctime>
#include <chrono>
#include <cstdio>
#include <cstring>
using namespace std;
typedef long long ll;
typedef long double ld;
typedef pair<ll, ll> pll;
typedef pair<int, int> pii;
typedef vector<pii> vpii;
typedef vector<vpii> vvpii;
typedef pair<double, double> pdd;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<vvi> vvvi;
typedef vector<bool> vb;
typedef vector<vb> vvb;
typedef vector<pll> vpll;
typedef vector<ll> vl;
typedef vector<vl> vvl;
typedef pair<bool, ll> pbl;
typedef vector<pbl> vpbl;
typedef vector<double> vd;
typedef vector<vd> vvd;
typedef vector<pdd> vpdd;
typedef vector<string> vs;
mt19937 rng(2391);
mt19937 gnr(chrono::high_resolution_clock::now().time_since_epoch().count());

#ifdef ONPC
int __builtin_popcount(int x)
{
	int ans = 0;
	while (x)
	{
		if (x & 1)
			++ans;
		x >>= 1;
	}
	return ans;
}
ll __builtin_popcountl(ll x)
{
	ll ans = 0;
	while (x)
	{
		if (x & 1)
			++ans;
		x >>= 1;
	}
	return ans;
}
int __builtin_clz(int x)
{
	int ans = 32;
	while (x)
	{
		--ans;
		x >>= 1;
	}
	return ans;
}
ll __builtin_clzl(ll x)
{
	ll ans = 64;
	while (x)
	{
		--ans;
		x >>= 1;
	}
	return ans;
}
int __builtin_ctz(int x)
{
	int ans = 0;
	while ((x & 1) == 0)
	{
		++ans;
		x >>= 1;
	}
	return ans;
}
ll __builtin_ctzl(ll x)
{
	ll ans = 0;
	while ((x & 1) == 0)
	{
		++ans;
		x >>= 1;
	}
	return ans;
}
#endif



int main()
{
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	cerr.tie(0);
#ifdef ONPC
	freopen("input.txt", "rt", stdin);
	freopen("output.txt", "wt", stdout);
	auto start_time = clock();
	cerr << setprecision(3) << fixed;
#endif

#ifdef ONPC
	auto end_time = clock();
	cerr << "Execution time: " << (end_time - start_time) * (int)1e3 / CLOCKS_PER_SEC << " ms\n";
#endif
	return 0;
}